# Definition for singly-linked list.
class ListNode(object):
    def __init__(self, x):
        self.val = x
        self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        p = l1
        q = l2
        t = ListNode(0)
        x = t
        
        if p == None and q== None:
            return None
        
        while p != None or q != None:
            if p == None:
                t.next = q
                break
            if q == None:
                t.next = p
                break
            if p.val <= q.val:
                t.next = p
                p = p.next
                t = t.next
            else:
                t.next = q
                q = q.next
                t = t.next
                
        ret = x.next
        
        return ret
        """
        dummy = ListNode(0)
        tmp = dummy
        while l1 != None and l2 != None:
            if l1.val < l2.val:
                tmp.next = l1
                l1 = l1.next
            else:
                tmp.next = l2
                l2 = l2.next
            tmp = tmp.next
        if l1 != None:
            tmp.next = l1
        else:
            tmp.next = l2
        return dummy.next
        """
